<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ham.main.member.MemberDAO">
	<!-- 회원가입 -->
  	<insert id="setMemberJoin" parameterType="MemberDTO">
  		INSERT INTO MEMBER (ID, PASSWORD, NAME, EMAIL, EMAILDOMAIN, PHONE)
  			VALUES (#{id}, #{password}, #{name}, #{email}, #{emailDomain}, #{phone})
  	</insert>
  	
  	<select id="getMemberByEmail" resultType="MemberDTO">
  		SELECT * FROM MEMBER WHERE EMAIL = #{email} AND EMAILDOMAIN = #{emailDomain}
  	</select>
  	
  	<!-- 로그인 -->
    <select id="getMemberLogin" parameterType="MemberDTO" resultMap="getMemberLoginResult">
    	SELECT M.*, R.* 
			FROM MEMBER M 
			INNER JOIN MEMBERROLE MR
			ON(M.ID = MR.ID)
			INNER JOIN ROLE R
			ON(MR.ROLENUM = R.ROLENUM)
			WHERE M.ID = #{id} AND M.PASSWORD = #{password}
    </select>
    
    <resultMap type="MemberDTO" id="getMemberLoginResult">
  		<!-- column의 이름과 setter의 이름이 같아야함. -->
  		<id column="ID" property="id"/>
  		<result column="PASSWORD" property="password"/>
  		<result column="NAME" property="name"/>
  		<result column="EMAIL" property="email"/>
  		<result column="EMAILDOMAIN" property="emailDomain"/>
  		<result column="PHONE" property="phone"/> 

  		<collection property="roles" javaType="List" ofType="RoleDTO">
			<id column="ROLENUM" property="roleNum"/>
			<result column="ROLENAME" property="roleName"/>
		</collection>
  	</resultMap>
  	
  	<insert id="setMemberRole" parameterType="MemberDTO">
  		INSERT INTO MEMBERROLE (ID, ROLENUM) 
  			VALUES (#{id}, (SELECT ROLENUM FROM ROLE WHERE ROLENAME='MEMBER'))
  	</insert>
	

	<resultMap type="MemberDTO" id="getSelectResult">
		<id column="ID" property="id"/>
		<result column="PASSWORD" property="password"/>
		<result column="NAME" property="name"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="POINT" property="point"/>
		<collection property="ktos" javaType="List" ofType="MemberFileDTO">
			<id column="FILENUM" property="fileNum"/>
			<result column="FILENAME" property="fileName"/>
			<result column="ORIGINALNAME" property="originalName"/>
		</collection>
	</resultMap>
	
	
	<select id="getCheckInfo" resultType="MemberDTO" parameterType="MemberDTO">
		SELECT * 
		FROM MEMBER
		WHERE ID = #{id}
			AND PASSWORD = #{password}
	</select>

	<update id="setUpdate" parameterType="MemberDTO">
		UPDATE MEMBER 
		SET NAME = #{name}, PASSWORD = #{password}, EMAIL = #{email}, PHONE = #{phone}
		WHERE ID = #{id}
	</update>
	
	<delete id="setDelete" parameterType="MemberDTO">
		DELETE MEMBER
		WHERE ID = #{id}
	</delete>
</mapper>