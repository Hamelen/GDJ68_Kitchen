<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="com.ham.main.member.MemberDAO">
  
    <!-- 회원가입 -->
  	<insert id="setMemberJoin" parameterType="MemberDTO">
  		INSERT INTO MEMBER (ID, PASSWORD, NAME, EMAIL, PHONE)
  			VALUES (#{id}, #{password}, #{name}, #{email}, #{phone})
  	</insert>
  	
  	<!-- SNS정보 DB저장 -->
  	<insert id="setSnsJoin" parameterType="SnsMemberDTO">
  		INSERT INTO SNSMEMBER (SNSID, PLATFORM, SNSNAME, SNSEMAIL)
  			VALUES (#{snsId}, #{platForm}, #{snsName}, #{snsEmail})
  	</insert>
  	  
  	<!-- 로그인 -->
	<select id="getMemberLogin" resultMap="getLoginResult" parameterType="MemberDTO">
		SELECT M.*, R.* 
			FROM MEMBER M 
			INNER JOIN MEMBERROLE MR
			ON(M.ID = MR.ID)
			INNER JOIN ROLE R
			ON(MR.ROLENUM = R.ROLENUM)
			WHERE M.ID = #{id} AND M.PASSWORD = #{password}
	</select>
	
	<resultMap type="MemberDTO" id="getLoginResult">
  		<!-- column의 이름과 setter의 이름이 같아야함. -->
  		<id column="ID" property="id"/>
  		<result column="PASSWORD" property="password"/>
  		<result column="NAME" property="name"/>
  		<result column="EMAIL" property="email"/>
  		<result column="PHONE" property="phone"/> 
  		
  		<collection property="roles" javaType="List" ofType="RoleDTO">
			<id column="ROLENUM" property="roleNum"/>
			<result column="ROLENAME" property="roleName"/>
		</collection>
  	</resultMap>
  	
  	<insert id="setMemberRole" parameterType="MemberDTO">
  		INSERT INTO MEMBERROLE (ID, ROLENUM) 
  			VALUES (#{id}, 1)
  	</insert>
	

	<!-- ID 중복체크 -->
  	<select id="getMemberIdCheck" parameterType="MemberDTO" resultType="MemberDTO">
  		SELECT ID FROM MEMBER WHERE ID = #{id} 
  	</select>
  	
  	<!-- EMAIL 중복체크 -->
  	<select id="getMemberEmailCheck" parameterType="MemberDTO" resultType="MemberDTO">
  		SELECT * FROM MEMBER WHERE EMAIL = #{email}
  	</select>
  	
  	<select id="memberTelCount" resultType="Long" parameterType="MemberDTO">
  	    SELECT COUNT(PHONE) FROM MEMBER
  	     WHERE PHONE=#{phone}
  	</select>
  	
  	<select id="getBySnsNaver" resultType="SnsMemberDTO">
        SELECT * FROM SNSMEMBER WHERE SNSID = #{snsId}
    </select>
    
    <select id="getBySns" resultType="SnsMemberDTO" parameterType="SnsMemberDTO">
        SELECT * FROM SNSMEMBER WHERE SNSEMAIL=#{snsEmail}
    </select>
    
    <select id="getDetail" resultType="MemberDTO" parameterType="MemberDTO">
        SELECT * 
          FROM MEMBER
         WHERE ID=#{id} 
    </select>
    
    <!-- 관리자용 -->
    <insert id="adminAdd" parameterType="MemberDTO">
     INSERT INTO MEMBERROLE VALUES (#{id},3)
    </insert>
    
    <delete id="adminRemove" parameterType="MemberDTO">
    DELETE FROM MEMBERROLE 
     WHERE ID=#{id} AND ROLENUM=3
    </delete>
  	
  <insert id="partnerAdd" parameterType="MemberDTO">
  INSERT INTO MEMBERROLE VALUES (#{id},2)
  </insert>	
  
   <delete id="partnerRemove" parameterType="MemberDTO">
     DELETE FROM MEMBERROLE 
     WHERE ID=#{id} AND ROLENUM=2
    </delete>
  	
<!--민준 업데이트-->
	
	<select id="getCheckInfo" resultType="MemberDTO" parameterType="MemberDTO">
		SELECT * 
		FROM MEMBER
		WHERE ID = #{id}
		AND PASSWORD = #{password}
	</select>

	<update id="setUpdate" parameterType="MemberDTO">
		UPDATE MEMBER 
		SET NAME = #{name}, PASSWORD = #{password}, EMAIL = #{email}, PHONE = #{phone}
		WHERE ID = #{id}
	</update>
	
	<delete id="setDelete" parameterType="MemberDTO">
		DELETE MEMBER
		WHERE ID = #{id}
	</delete>

    
    



  </mapper>
  

